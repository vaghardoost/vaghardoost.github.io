{"pageProps":{"note":{"title":"کتابخانه ی (Riverpod (StateNotifierProvider","content":[{"header":"h3","text":"پیشگفتار","id":"6971a83a","type":"title","align":"start"},{"id":"babff597","type":"caption","content":[{"content":[{"text":"StateNotifierProvider یک نوع از Provider در کتابخانه Riverpod برای مدیریت وضعیت‌ها با استفاده از کلاسی با نام StateNotifier استفاده می‌شود. این نوع Provider به توسعه‌دهندگان این امکان را می‌دهد که وضعیت‌ها را به صورت کلی و بهینه‌تری در برنامه‌های Flutter مدیریت کنند.","style":{"weight":[]}}]},{"content":[{"text":"تفاوتی که بین این روش و روش StateProvider هست در اینجاست که در روش StateProvider هرجا state تغییر کرد وضعیت تغییر میکند ولی در این روش هر زمان لازم بود اعلام تغییر میشود.","style":{"weight":[]}}]}]},{"content":[{"content":[{"text":"اگر نمیدانید دقیقا Riverpod چیست پست معرفی اون رو مطالعه کنید","style":{"weight":["BOLD"]}}]}],"id":"02ab72c0","type":"frame","status":"warning"},{"header":"h3","text":"نحوه ی کارکرد","id":"049d1dfb","type":"title","align":"start"},{"id":"ebe11416","type":"caption","content":[{"content":[{"text":"ابتدا یک StateNotifier را تعریف کنید که وضعیت‌های تغییرپذیر را مدیریت کند.","style":{"weight":[]}}]},{"content":[{"text":"سپس StateNotifierProvider را تعریف کنید و از StateNotifier ایجاد شده در مرحله قبل استفاده کنید.","style":{"weight":[]}}]},{"content":[{"text":"در بخش‌های مختلف برنامه، می‌توانید از این StateNotifierProvider برای خواندن و به‌روزرسانی وضعیت‌ها استفاده کنید.","style":{"weight":[]}}]}]},{"header":"h3","text":"مثال","id":"25e2dfb6","type":"title","align":"start"},{"text":"import 'package:flutter/material.dart';\nimport 'package:flutter_riverpod/flutter_riverpod.dart';\n\n// 1. تعریف StateNotifier برای مدیریت وضعیت\nclass CounterNotifier extends StateNotifier<int> {\n  CounterNotifier() : super(0);\n\n  void increment() => state++;\n  void decrement() => state--;\n}\n\n// 2. تعریف StateNotifierProvider برای استفاده از StateNotifier\nfinal counterProvider = StateNotifierProvider<CounterNotifier, int>((ref) {\n  return CounterNotifier();\n});\n\nvoid main() {\n  runApp(\n    ProviderScope(\n      child: MyApp(),\n    ),\n  );\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('StateNotifierProvider در Riverpod - مثال شمارنده'),\n        ),\n        body: Center(\n          child: Consumer(builder: (context, watch, child) {\n            // 3. خواندن وضعیت از StateNotifierProvider\n            final counter = watch(counterProvider);\n\n            return Column(\n              mainAxisAlignment: MainAxisAlignment.center,\n              children: [\n                Text('شمارنده: ${counter.state}', style: TextStyle(fontSize: 24)),\n                ElevatedButton(\n                  onPressed: () {\n                    // 4. به‌روزرسانی وضعیت با استفاده از توابع ارائه شده در StateNotifier\n                    counter.read(context).increment();\n                  },\n                  child: Text('افزایش تعداد'),\n                ),\n                ElevatedButton(\n                  onPressed: () {\n                    // کاهش تعداد\n                    counter.read(context).decrement();\n                  },\n                  child: Text('کاهش تعداد'),\n                ),\n              ],\n            );\n          }),\n        ),\n      ),\n    );\n  }\n}","id":"375eaed6","type":"code"},{"id":"fe7bb2f9","type":"caption","content":[{"content":[{"text":"در اینجا ما یک StateNotifier به نام CounterNotifier تعریف کرده‌ایم که وضعیت شمارنده را مدیریت می‌کند و دو تابع برای افزایش و کاهش وضعیت را ارائه می‌دهد.","style":{"weight":[]}}]},{"content":[{"text":"سپس ما از StateNotifierProvider با نام counterProvider برای استفاده از CounterNotifier تعریف شده در مرحله قبل استفاده می‌کنیم.","style":{"weight":[]}}]},{"content":[{"text":"در بخش MyApp، ما از Consumer برای خواندن وضعیت از counterProvider استفاده می‌کنیم.","style":{"weight":[]}}]},{"content":[{"text":"با کلیک بر روی دکمه‌ها می‌توانیم به‌روزرسانی وضعیت را با استفاده از توابع ارائه شده توسط StateNotifier انجام دهیم.","style":{"weight":[]}}]},{"content":[{"text":"StateNotifierProvider در Riverpod به توسعه‌دهندگان اجازه می‌دهد به صورت بهینه و ساختاری واحد وضعیت‌های تغییرپذیر را در برنامه‌های Flutter مدیریت کنند.","style":{"weight":[]}}]}]}],"author":"645b942ad412792a214b1177","namespace":"64ae7b316730ddb96b37c6fb","tag":["فلاتر","flutter","riverpod","state management"],"photo":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/64f9fcaaa9ebdd5557a121e5.jpg","category":{"label":"فلاتر","author":"645b942ad412792a214b1177","description":"برنامه نویسی فریم ورک flutter","parent":"64d4ce0abed03dc8b207ba64","color":"#006381","avatar":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/demo.64d50ec469736b1601e502ea.png","namespace":"64ae7b316730ddb96b37c6fb","id":"64d4cf40bed03dc8b207ba68","notes":[{"title":"معرفی Riverpod","author":"645b942ad412792a214b1177","namespace":"64ae7b316730ddb96b37c6fb","tag":["riverpod","flutter","state management "],"photo":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/64f9fcaaa9ebdd5557a121e5.jpg","category":"64d4cf40bed03dc8b207ba68","id":"64f9fcf254f915f69631196b"},{"title":"کتابخانه ی (Riverpod (FutureProvider","tag":["flutter","فلاتر","riverpod","state management"],"photo":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/64f9fcaaa9ebdd5557a121e5.jpg","category":"64d4cf40bed03dc8b207ba68","author":"645b942ad412792a214b1177","namespace":"64ae7b316730ddb96b37c6fb","id":"652fb44b25b15e2ca0d2b69a"},{"title":"کتابخانه ی (Riverpod (NotifierProvider","tag":["فلاتر","flutter","riverpod","state management"],"photo":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/64f9fcaaa9ebdd5557a121e5.jpg","category":"64d4cf40bed03dc8b207ba68","author":"645b942ad412792a214b1177","namespace":"64ae7b316730ddb96b37c6fb","id":"652fba6025b15e2ca0d2b6a2"},{"title":"کتابخانه ی (Riverpod (Provider","author":"645b942ad412792a214b1177","namespace":"64ae7b316730ddb96b37c6fb","tag":["فلاتر","flutter","riverpod","state management"],"photo":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/64f9fcaaa9ebdd5557a121e5.jpg","category":"64d4cf40bed03dc8b207ba68","id":"652e8490324af022a3dd41aa"},{"title":"کتابخانه ی (Riverpod (StateNotifierProvider","tag":["فلاتر","flutter","riverpod","state management"],"photo":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/64f9fcaaa9ebdd5557a121e5.jpg","category":"64d4cf40bed03dc8b207ba68","author":"645b942ad412792a214b1177","namespace":"64ae7b316730ddb96b37c6fb","id":"652fb98c25b15e2ca0d2b6a0"},{"title":"کتابخانه ی (Riverpod (StateProvider","tag":["فلاتر","Flutter","riverpod","state management"],"category":"64d4cf40bed03dc8b207ba68","photo":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/64f9fcaaa9ebdd5557a121e5.jpg","author":"645b942ad412792a214b1177","namespace":"64ae7b316730ddb96b37c6fb","id":"652fac2925b15e2ca0d2b698"},{"title":"کتابخانه ی (Riverpod (StreamProvider","tag":["فلاتر","flutter","riverpod","state management"],"photo":"http://localhost:31375/64ae7b316730ddb96b37c6fb/photo/64f9fcaaa9ebdd5557a121e5.jpg","category":"64d4cf40bed03dc8b207ba68","author":"645b942ad412792a214b1177","namespace":"64ae7b316730ddb96b37c6fb","id":"652fb84a25b15e2ca0d2b69e"}]},"id":"652fb98c25b15e2ca0d2b6a0"}},"__N_SSG":true}